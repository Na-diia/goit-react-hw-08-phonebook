{"version":3,"file":"static/js/845.56e6d1b2.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/Navigation/Navigation.jsx","components/Navigation/navigation.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/ContactsPage.styled.js","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 80px;\n  margin-right: 35px;\n  width: 530px;\n  height: 400px;\n  border-radius: 5px;\n  backdrop-filter: blur(12px);\n  background: rgba(3,3,3,0.25);\n  box-shadow: 1px 1px 50px #000;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  justify-content: center;\n  align-items: center;\n  margin: 15px;\n`;\n\nexport const Btn = styled.button`\n   display: flex;\n   align-items: center;\n   padding-top: 10px;\n   padding-bottom: 10px;\n   padding-left: 20px;\n   padding-right: 20px;\n   border-radius: 5px; \n   border-color: #3498db;\n   color: #fff;\n   box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\n   transition: all 150ms ease-in-out;\n   cursor: pointer;\n   margin-top: 15px;\n\n   &:hover{\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\n    color: #3498db;\n   }\n`;  \n\nexport const Title = styled.h2`\n   position: relative;\n  z-index: 1;\n  font-family: 'Gambetta', serif;\n  transition: 700ms ease;\n  font-variation-settings: \"wght\" 311;\n  margin-left: 25px;\n  font-weight: bold;\n  font-size: 28px;\n  color: #ddd;\n  text-shadow: 3px 3px 10px #000;\n\n  &:hover {\n    font-variation-settings: \"wght\" 582; \n    letter-spacing: 1px;\n    }\n`;","import styled from '@emotion/styled';\nimport logout from '../../images/logout.png';\n\nexport const Item = styled.li`\n    display: flex;\n`;\n\nexport const Mail = styled.p`\n  position: relative;\n  top: -1px;\n  margin-left: 15px;\n  font-size: 18px;\n  color: #090979;\n  font-family: 'Gambetta', serif;\n  transition: 700ms ease;\n  font-variation-settings: \"wght\" 311;\n`;\n\nexport const LogOut = styled.button`\ntransition: all .2s;\ncursor: pointer;\nborder: none;\n//margin-left: 20px;\ntop: -8px;\nwidth: 70px;\nheight: 70px;\nbackground-color: transparent;\nbackground-image: url(${logout});\nbackground-size: cover;\nposition: relative;\nz-index: 2;\n\n&:hover, &:focus {\n  transform: scale(1.25);;\n}\n`;","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectUser } from 'redux/selectors';\nimport { logOut } from 'redux/auth/auth-operations';\nimport { LogOut, Mail, Item } from './UserMenu.styled';\n\nconst UserMenu = () => {\n  const {email} = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n      dispatch(logOut());\n  };\n\n  return (\n      <Item>\n        <Mail>Hello, {email}!</Mail>\n        <LogOut type='button' onClick={handleLogOut}></LogOut>\n      </Item>\n  );\n};\n\nexport default UserMenu;","import { useSelector } from 'react-redux';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { selectIsLogin } from 'redux/selectors';\nimport Loader from 'components/Loader/Loader';\nimport { Container, HeaderLink, Header, List, WrapIcon, Title, Item, HomeLink} from './navigation.styled';\n\nimport UserMenu from 'components/UserMenu/UserMenu';\n\nconst Navigation = () => {\n    const userIsLogin = useSelector(selectIsLogin);\n     \n    return (\n        <Container >\n        <Header>\n        < HomeLink to=\"/\">\n        <WrapIcon></WrapIcon>\n        <Title>PHONE BOOK</Title>\n        </ HomeLink>\n        <List >\n         <li>{!userIsLogin && <HeaderLink to=\"/\">HOME</HeaderLink>}</li>\n         <li>{!userIsLogin && <HeaderLink to=\"/register\" >SIGN UP</HeaderLink>}</li>\n         <li>{!userIsLogin && <HeaderLink to=\"/login\" >SIGN IN</HeaderLink>}</li>\n         <Item>{userIsLogin && <HeaderLink to=\"/contacts\">CONTACTS</HeaderLink>}</Item>\n         {userIsLogin && <UserMenu />}\n        </List >\n        <Suspense fallback={<Loader />}>\n        <Outlet />\n        </Suspense>\n        </Header>\n        </Container>\n    );\n};\n\nexport default Navigation;","import styled from \"@emotion/styled\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport headerIcon from '../../images/icon-phone.png';\n\nexport const Item = styled.li`\n  position: relative;\n  top: 16px;\n`;\n\nexport const HomeLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  position: relative;\n  top: -6px;\n  left: 30px;\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 15px;\n  background-color: inherit;\n`;\n\nexport const Header = styled.header`\n  width: 100%;\n  display: flex;\n  margin: 0px 0px;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 15px;\n  padding-right: 15px;\n   \n  &::before {\n  content: \"\";\n  background: transparent;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 5rem;\n  box-shadow: rgb(0 0 0 / 30%) 0px 2px 4px;\n  z-index: 0;\n}\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n\nexport const WrapIcon = styled.div`\n  margin-right: 20px;\n  width: 70px;\n  height: 70px;\n  background-image: url(${headerIcon});\n  background-size: cover;\n  position: relative;\n  //top: -8px;\n  left:30px;\n  margin-left: 30px;\n  margin-top: 10px;\n  z-index: 1;\n\n  &:hover, &:focus {\n    transform: scale(1.25);\n  }\n     \n  @media screen and (max-width: 360px) {\n   margin-right: 0px;\n   width: 45px;\n   height: 45px;\n  };\n`;\n\nexport const HeaderLink = styled(NavLink)`\n  text-decoration: none;\n  overflow: visible;\n  position: relative;\n  margin-right: 10px;\n  margin-left: 20px;\n\tborder-radius: 10px;\n\tbackground-color: rgb(0 0 0 / 70%);\n  padding: 10px;\n  font-weight: bold;\n\tfont-size: 20px;\n\tfont-family: cambria;\n\tcolor: #bccad6;\n\tborder: none;\n\n  &.active {\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\n  }\n\n  &:hover, &:focus {\n    border: 1px solid rgb(0 0 0 / 90%);\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\n    opacity: 1;\n\t  text-align: center;\n\t  background: repeating-linear-gradient(\n\t\t45deg, #090979,\n\t\t#6087a1 30px,\n\t\t#bccad6 30px,\n\t\t#bccad6 60px);\n\t  background-clip: text;\n\t  color: transparent;\n\t  animation: 40s linear 0s infinite move;\n  }\n \n  @keyframes move {\n\t from {\n\t\tbackground-position: 0px;}\n\tto {\n\t\tbackground-position: 1000px;}\n   }\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 30px;\n  z-index: 1;\n  font-family: 'Gambetta', serif;\n  transition: 700ms ease;\n  font-variation-settings: \"wght\" 311;\n  margin-left: 25px;\n  font-weight: bold;\n  font-size: 28px;\n  text-transform: uppercase;\n  color: #ddd;\n  text-shadow: 3px 3px 10px #000;\n\n  &:hover {\n    font-variation-settings: \"wght\" 582; \n    letter-spacing: 1px;\n    }\n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport TextField from '@mui/material/TextField';\nimport { Oval } from \"react-loader-spinner\";\n\nimport { Btn, Form, Wrap, Title } from \"./ContactForm.styled\";\nimport { selectContacts, selectLoading } from \"redux/selectors\";\nimport { addContact } from \"redux/contacts/contacts-operations\";\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  const isExist = contactName => {\n    return contacts.some(({ name }) => name.toLowerCase() === contactName.toLowerCase());\n  };\n\n  const  handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const contactName = form.elements.name.value;\n    const contactPhone = form.elements.number.value;\n  if (isExist(contactName)) {\n      toast.warn(`${contactName} is already in contacts!`, {\n        theme: \"dark\"\n      });\n      return;\n    } else{\n     dispatch(addContact({\n      name: contactName, \n      number: contactPhone}));\n     toast.success(\"Successfully!\", {\n      theme: \"dark\"\n     });\n     form.reset();\n    };\n  };\n\n  return (\n    <Wrap>\n      <Form autoComplete=\"on\"\n       onSubmit={handleSubmit}>\n        <Title>Your new contact!</Title>\n      <TextField id=\"name-contact\" label=\"Name\" required type='text' name='name'\n        margin='normal' fullWidth variant=\"filled\" autoComplete='off'\n       placeholder=\"Jacob Mercer\"\n      pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <TextField\n      id=\"number-contact\"\n      label=\"Number\"\n      margin=\"normal\"\n      fullWidth\n      variant=\"filled\"\n      autoComplete=\"off\"\n      placeholder=\"257-42-21\"\n      type=\"tel\"\n      name=\"number\"\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      required/>\n      <Btn type=\"submit\"> Add contact\n      {!contacts && isLoading && <Oval height={20}\n       width={20}\n       color=\"blue\"\n       visible={true}\n       wrapperStyle={{\"margin-left\": 5}}\n       ariaLabel='oval-loading'\n       secondaryColor=\"#fff\"\n       strokeWidth={2}\n       strokeWidthSecondary={2}/>}</Btn>\n      </Form>\n    </Wrap>\n  )\n};","import styled from \"@emotion/styled\";\nimport iconRemove from '../../images/iconRemove.png';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items:center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  backdrop-filter: blur(12px);\n  background: rgba(3,3,3,0.25);\n  box-shadow: 1px 1px 50px #000;\n`;\n\nexport const List = styled.ul`\n  margin-top: 8px;\n  margin-left: 35px;\n`;\n\nexport const Text = styled.p`\n   font-size: 18px;\n   font-weight: 500;\n   color: #090979;\n   font-style: italic;\n`;\n\nexport const BtnDelete = styled.button`\n  cursor: pointer;\n  transition: all .2s;\n  border: none;\n  width: 50px;\n  height: 50px;\n  background-color: transparent;\n  background-image: url(${iconRemove});\n  background-size: cover;\n  position: relative;\n  z-index: 1;\n   \n  &:hover, &:focus {\n    transform: scale(1.25);\n  }\n`;","import { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { List, Text, BtnDelete, Item } from './ContactList.styled';\nimport { selectContacts, selectFilter, selectLoading, selectError } from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contacts-operations';\nimport Loader from 'components/Loader/Loader';\n\nexport const ContactList =() => {\n  const contactsValue = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect (() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const findContact = () => {\n    if(!filter) return contactsValue;\n    \n      return contactsValue.filter(contact => \n         contact.name.toLowerCase().includes(filter)\n        );\n  };\n\n  const foundContacts = findContact();\n\n  const removeContact = (id) => {\n    dispatch(deleteContact(id));\n    toast.success('The contact deleted!', {\n      theme: 'dark'\n    });\n  };\n\n  const contacts = foundContacts.map(({id, name, number}) => {\n    return (<Item key={id}><Text>{name} : {number}</Text>\n    <BtnDelete type=\"button\" \n    onClick={() => removeContact(id)}></BtnDelete></Item>)});\n\n  return(\n    <List>\n      {isLoading && <Loader />}\n      {error && <Text>{error}</Text>}\n      {contactsValue < 1 && <Text>Contact list is empty!</Text>}\n      {contacts}\n    </List>\n  )\n};\n","import styled from \"@emotion/styled\";\n\nexport const FilterWrap = styled.div` \n    display: flex;\n    flex-direction:column;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  color: #090979;\n  margin-left: 15px;\n  font-family: 'Gambetta', serif;\n  transition: 700ms ease;\n  font-variation-settings: \"wght\" 311;\n`; ","import { useDispatch} from 'react-redux';\nimport TextField from '@mui/material/TextField';\n\nimport { Text, FilterWrap } from './Filter.styled';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = (event) => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return ( \n    <FilterWrap>\n    <Text>Find contacts by name!</Text>\n     <TextField\n     label=\"Enter name\"\n      type=\"text\" \n      pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n      onChange={filter}/>\n     </FilterWrap>\n   )\n}; ","import styled from \"@emotion/styled\";\nimport background from '../../images/bg-img-1.jpg';\n\nexport const Container = styled.div`\n   max-width: 1300px;\n   height: 100vh;\n   margin: 0px 0px;\n   padding: 0px 0px;\n  \n   &::before {\n     content: \"\";\n    background-image: url(${background});\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    opacity: 0.7;\n}`;\n\n\nexport const ContactsWrap = styled.div`\n   display: flex;\n`;\n\nexport const Box = styled.div`\n   display: flex;\n`;","import Navigation from \"components/Navigation/Navigation\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactsWrap, Container, Box} from \"./ContactsPage.styled\";\n\nconst ContactsPage = () => {\n\n    return (\n        <Container>\n        <Navigation />\n        <ContactsWrap>\n        <ContactForm />\n        <Box>\n        <Filter />\n        <ContactList />\n        </Box>\n        </ContactsWrap>\n        </Container>\n    )\n};\n\nexport default ContactsPage;"],"names":["Wrap","styled","Form","Btn","Title","Item","Mail","LogOut","logout","email","useSelector","selectUser","dispatch","useDispatch","type","onClick","logOut","userIsLogin","selectIsLogin","to","Suspense","fallback","Loader","HomeLink","Link","Container","Header","List","WrapIcon","headerIcon","HeaderLink","NavLink","ContactForm","contacts","selectContacts","isLoading","selectLoading","autoComplete","onSubmit","event","preventDefault","form","currentTarget","contactName","elements","name","value","contactPhone","number","some","toLowerCase","isExist","addContact","toast","theme","reset","TextField","id","label","required","margin","fullWidth","variant","placeholder","pattern","title","height","width","color","visible","wrapperStyle","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Text","BtnDelete","iconRemove","ContactList","contactsValue","filter","selectFilter","error","selectError","useEffect","fetchContacts","foundContacts","contact","includes","map","deleteContact","removeContact","FilterWrap","Filter","onChange","setFilter","target","background","ContactsWrap","Box","Navigation"],"sourceRoot":""}